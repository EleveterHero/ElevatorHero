using UnityEngine;
using System.Collections;

public class HeroController : MonoBehaviour
{

    public bool move = false;

    public float speed = 1.0f;

    public bool is_left = true;

    public float left = -7.5f;

    public float right = 7.5f;

    private Vector3 start_position = Vector3.zero;
    private Vector3 changed_position = Vector3.zero;


    void Awake()
    {
        start_position = transform.localPosition;
    }

    // Use this for initialization
    void Start()
    {

        SetRotate();
        

    }

    // Update is called once per frame
    void Update()
    {
        if (move)
        {
            HeroMove();

            if (Input.GetMouseButtonUp(0))
            {
                is_left = !is_left;
            }
        }

    }

   

    void HeroMove()
    {
        float delta_time = Time.deltaTime;


        if (is_left)
        {
            //移動量計算
            transform.localPosition += new Vector3(delta_time * speed * -1.0f, 0.0f, 0.0f);

            //向き変更とそれに伴う移動
            if (transform.localPosition.x < left)
            {
                is_left = false;
                transform.localPosition += new Vector3(left - transform.localPosition.x, 0.0f, 0.0f);
            }
        }
        else
        {
            //移動量計算
            transform.localPosition += new Vector3(delta_time * speed, 0.0f, 0.0f);

            //向き変更とそれに伴う移動
            if (transform.localPosition.x > right)
            {
                is_left = true;
                transform.localPosition += new Vector3(right - transform.localPosition.x, 0.0f, 0.0f);
            }
        }

        SetRotate();

    }

    void SetRotate()
    {
        if (is_left)
        {
            transform.localRotation = Quaternion.Euler(0.0f, 0.0f, 0.0f);
        }
        else
        {
            transform.localRotation = Quaternion.Euler(0.0f, 180.0f, 0.0f);
        }
    }


    public void ResetToStartPosition()
    {
        transform.localPosition = start_position;
    }

    public void SetPosition(Vector3 pos)
    {
        changed_position = pos;
        ResetToChangedPosition();
    }
    
    public void ResetToChangedPosition()
    {
        transform.localPosition = changed_position;
    }


}